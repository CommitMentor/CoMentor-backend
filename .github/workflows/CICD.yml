name: CICD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Decode and verify
        run: |
          echo "Decoding application-secret.yml"
          echo "${{ secrets.SECRET_YML }}" | base64 -d > ./src/main/resources/application-secret.yml

      - name: Build with Gradle
        run: |
          chmod 777 ./gradlew
          ./gradlew clean assemble -x test

      # ⬇️ 로그인 액션 v3 로 교체
      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}   # 로그인할 '개인 계정' id (소문자)
          password: ${{ secrets.DOCKERHUB_TOKEN }}      # Docker Hub Access Token

      # ⬇️ 푸시 대상 네임스페이스/리포 존재 & 권한 체크 (푸시 전)
      - name: Who am I & repo exists?
        if: github.event_name == 'push'
        env:
          NS:   ${{ secrets.DOCKERHUB_NAMESPACE }}      # 푸시 대상 네임스페이스(개인 id 또는 org 이름, 소문자)
          REPO: ${{ secrets.DOCKERHUB_REPO }}           # 리포 이름(소문자)
          U:    ${{ secrets.DOCKERHUB_USERNAME }}       # 로그인 계정
          T:    ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo "== docker info username =="
          docker info | grep -i 'Username' || true
          echo "== push target = docker.io/${NS}/${REPO}:latest =="

          echo "== check repo exists on Docker Hub =="
          curl -fsSL -u "${U}:${T}" "https://hub.docker.com/v2/repositories/${NS}/${REPO}/" >/dev/null \
            && echo "Repo exists ✅" \
            || (echo "Repo missing or no access ❌ (네임스페이스/권한/오타 확인)"; exit 1)

      # ⬇️ 태그에 '네임스페이스/리포' 사용 (기존 USERNAME/REPONAME 사용 X)
      - name: Build Docker Image
        if: github.event_name == 'push'
        env:
          NS:   ${{ secrets.DOCKERHUB_NAMESPACE }}
          REPO: ${{ secrets.DOCKERHUB_REPO }}
        run: |
          docker build --platform linux/amd64 \
            --build-arg FIREBASE_CREDENTIAL_BASE64="${{ secrets.FIREBASE_CREDENTIAL_BASE64 }}" \
            --build-arg PROFILES=prod \
            -t ${NS}/${REPO}:latest .

      - name: Push Docker Ima
