plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.openapi.generator" version "6.5.0"
    id "com.diffplug.eclipse.apt" version "3.26.0"
}

group = 'com.knu'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ========== Spring Boot 기본 의존성들 ==========
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // ========== Lombok ==========
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // ========== MySQL Driver ==========
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ========== Test ==========
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // ========== JWT ==========
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-orgjson:0.11.2'

    // ========== Spring Plugin (필요하다면 최신 버전) ==========
    // implementation "org.springframework.plugin:spring-plugin-core:3.1.2"

    // ========== Springdoc OpenAPI ==========
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // ========== Openapi generator ==========
    implementation 'org.openapitools:openapi-generator:6.5.0'
    implementation "org.openapitools:openapi-generator-gradle-plugin:6.5.0"

}

tasks.named('test') {
    useJUnitPlatform()
}


